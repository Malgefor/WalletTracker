@model WalletTracker.ViewModels.WalletInfoOverviewViewModel

@{
    Layout = null;
}

Address: @Model.WalletInfo.Address.Address <br>
Currency base type: @Model.WalletInfo.Address.Base.Name <br> <br>

<h3>Balances</h3>

@foreach (var token in Model.WalletInfo.Tokens)
{
    foreach (var currencyValuePairs in Model.CurrencyValueInfo)
    {
        if (currencyValuePairs.Currency.Equals(token.Currency))
        {
            <h4>@token.Currency.Name</h4>
            <span>Balance: </span>@token.Balance <br> <br>

            foreach (var currencyValuePair in currencyValuePairs.CurrencyValuePairs)
            {
                <span><b>@currencyValuePair.Currency.Name</b></span> <br>
                <span>Current value per token: @currencyValuePair.Currency.Name </span> <span>@currencyValuePair.CurrentValue </span> <br>
                <span>Current value total assets in token: @currencyValuePair.Currency.Name </span> <span>@(currencyValuePair.CurrentValue * token.Balance)</span>
                <br>
            }
            <br>
        }
    }
}
